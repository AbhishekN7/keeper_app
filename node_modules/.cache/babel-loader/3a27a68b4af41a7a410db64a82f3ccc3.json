{"ast":null,"code":"import _defineProperty from\"E:\\\\College-Practicals\\\\WebDev\\\\Udemy\\\\Keeper App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\College-Practicals\\\\WebDev\\\\Udemy\\\\Keeper App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:\\\\College-Practicals\\\\WebDev\\\\Udemy\\\\Keeper App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";function CreateArea(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExpanded=_useState2[0],setExpanded=_useState2[1];var _useState3=useState({title:\"\",content:\"\"}),_useState4=_slicedToArray(_useState3,2),note=_useState4[0],setNote=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}function submitNote(event){props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();}function expand(){setExpanded(true);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{className:\"create-note\"},isExpanded?/*#__PURE__*/React.createElement(\"input\",{name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}):null,/*#__PURE__*/React.createElement(\"textarea\",{name:\"content\",onClick:expand,onChange:handleChange,value:note.content,placeholder:\"Take a note...\",rows:isExpanded?3:1}),/*#__PURE__*/React.createElement(\"button\",{onClick:submitNote},\"+\")));}export default CreateArea;","map":{"version":3,"sources":["E:/College-Practicals/WebDev/Udemy/Keeper App/src/components/CreateArea.jsx"],"names":["React","useState","CreateArea","props","isExpanded","setExpanded","title","content","note","setNote","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","expand"],"mappings":"wgBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CAEzB,cAAiCF,QAAQ,CAAC,KAAD,CAAzC,wCAAMG,UAAN,eAAkBC,WAAlB,eACA,eAAwBJ,QAAQ,CAAC,CAC/BK,KAAK,CAAE,EADwB,CAE/BC,OAAO,CAAE,EAFsB,CAAD,CAAhC,yCAAOC,IAAP,eAAaC,OAAb,eAKA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAEAL,OAAO,CAAC,SAAAM,QAAQ,CAAI,CAClB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALM,CAAP,CAMD,CAED,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA2B,CACzBR,KAAK,CAACc,KAAN,CAAYT,IAAZ,EACAC,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAI,KAAK,CAACO,cAAN,GACD,CAED,QAASC,CAAAA,MAAT,EAAiB,CACfd,WAAW,CAAC,IAAD,CAAX,CACD,CAED,mBACE,4CACE,4BAAM,SAAS,CAAC,aAAhB,EACGD,UAAU,cAAG,6BACZ,IAAI,CAAC,OADO,CAEZ,QAAQ,CAAEM,YAFE,CAGZ,KAAK,CAAEF,IAAI,CAACF,KAHA,CAIZ,WAAW,CAAC,OAJA,EAAH,CAKP,IANN,cAQE,gCACE,IAAI,CAAC,SADP,CAEE,OAAO,CAAIa,MAFb,CAGE,QAAQ,CAAET,YAHZ,CAIE,KAAK,CAAEF,IAAI,CAACD,OAJd,CAKE,WAAW,CAAC,gBALd,CAME,IAAI,CAAEH,UAAU,CAAG,CAAH,CAAO,CANzB,EARF,cAgBE,8BAAQ,OAAO,CAAEY,UAAjB,MAhBF,CADF,CADF,CAsBD,CAED,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n\n  const[isExpanded ,setExpanded] = useState(false);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  function expand(){\n    setExpanded(true);\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {isExpanded ? <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        /> :null}\n\n        <textarea\n          name=\"content\"\n          onClick = {expand}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isExpanded ? 3 : 1}\n        />\n        <button onClick={submitNote}>+</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}